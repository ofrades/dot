# vim: set ft=tmux:
set -g mouse on
set-option -sg escape-time 0
set -g base-index 1
set -s extended-keys always
setw -g pane-base-index 1
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

# vi mode
set -g status-keys vi
setw -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-selection-and-cancel
bind-key -T copy-mode-vi Escape send -X cancel
bind-key -T copy-mode-vi d send -X halfpage-down
bind-key -T copy-mode-vi u send -X halfpage-up

# maps
unbind C-b
set-option -g prefix C-Space
bind-key C-a last-window
bind-key a send-prefix
bind-key S set-window-option synchronize-panes
bind-key Space copy-mode

bind-key -n M-k resize-pane -U 5
bind-key -n M-j resize-pane -D 5
bind-key -n M-h resize-pane -L 5
bind-key -n M-l resize-pane -R 5

# vim-like pane switching
bind -r ^ last-window
bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R
bind r source-file ~/.tmux.conf

bind-key [ swap-window -d -t -1
bind-key ] swap-window -d -t +1

bind-key n previous-window
bind-key p next-window
bind-key C-n previous-window
bind-key C-p next-window

bind-key t split-window -v -p 30 -c "#{pane_current_path}"
bind-key s split-window -c "#{pane_current_path}"
bind-key v split-window -h -c "#{pane_current_path}"
bind-key c new-window -a -c "#{pane_current_path}"
bind-key - display-popup -d "#{pane_current_path}"
# split vertically or horizontally depending on size
bind-key Enter run "[[ $(($(tmux display -p '8*#{pane_width}-20*#{pane_height}'))) -lt 0 ]] && tmux splitw -v -c '#{pane_current_path}' || tmux splitw -h -c '#{pane_current_path}'"

# status line
set -g status-position top

# plugins
set -g @plugin 'tmux-plugins/tmux-sensible' # better defaults
set -g @plugin 'tmux-plugins/tmux-yank' # better clipboard
set -g @plugin 'tmux-plugins/tmux-prefix-highlight' # show prefix in status line

set -g @plugin 'tmux-plugins/tpm'
run '~/.tmux/plugins/tpm/tpm'
